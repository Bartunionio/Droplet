@model Droplet.Models.DoctorViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Doctor</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Doctor.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Doctor.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Doctor.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Doctor.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Doctor.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Doctor.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Doctor.PESEL)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Doctor.PESEL)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Hospitals)
        </dt>
        <dd class="col-sm-10">
            @if(Model.SelectedHospitalIds.Any())
            {
                <ul>
                @foreach (var hospital in Model.Hospitals)
                {
                    @if (Model.SelectedHospitalIds.Contains(hospital.Id))
                    {
                        <li>@hospital.Name</li>
                    }
                }
                </ul>
            }
            else
            {
                <p>Doc is jobless!</p>
            }
            
        </dd>
        
    </dl>

    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>
